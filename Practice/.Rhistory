}
amtpaid <- 5; numtimes <- 1000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
abgame <- function(){
rngA <- c(0,1); pA <- rep(1/2,2); rngB <- 1:6; pB <- rep(1/6,6)
ic <- 0; Awin <- 0; Bwin <- 0
while(ic == 0){
x <- sample(rngA,1,pr=pA)
if(x==1){
ic <- 1; Awin <- 1
} else {
y <- sample(rngB,1,pr=pB)
if(y <= 4){ic <- 1; Bwin <- 1}
}
}
return(c(Awin,Bwin))
}
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
lines(circum ~ r); title("Circumference vs Radius")
8+6-7*2
simplegame(5)
(150/3)+7^2-1;sqrt(50)-(50)^(0.5)
(4/3)*pi*(5)^3
r<-5
vol<-(4/3)*pi*(r)^3
vol
r <- c(5,6,7,8,9)
r
vol<-(4/3)*pi*(r)^3;vol
r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
vol[2]
r[2]
#matrices
v1=c(1,3);r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
v1=c(1,3);v2=c(4,2);Mat_A=cbind(v1,v2)
Mat_A
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2)
mat_B
8+6-7*2
simplegame(5)
(150/3)+7^2-1;sqrt(50)-(50)^(0.5)
(4/3)*pi*(5)^3
r<-5
vol<-(4/3)*pi*(r)^3
vol
r <- c(5,6,7,8,9)
r
vol<-(4/3)*pi*(r)^3;vol
r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
vol[2]
r[2]
#matrices
v1=c(1,3);r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
v1=c(1,3);v2=c(4,2);Mat_A=cbind(v1,v2)
Mat_A
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2)
mat_B
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2);mat_B
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2);Mat_B
Mat_A%*%Mat_B;solve(Mat_A);t(Mat_B)%*%Mat_A
Mat_A[2,2]
Mat_A[2,1]
Mat_B[2:3,3:4]
#Mat_B[2:3,3:4]
Mat_B[1:2,3:4]
x = c(-2,0,3,4,-7,-8,11,0)
x
xn = x[x<0]; xn
xp = x[x>0]; xp
xz = x[x=0]; xz
xz = x[x==0]; xz
par(mfrow=c(2,2))
par(mfrow=c(4,4))
par(mfrow=c(4,4))
par(mfrow=c(2,2))
r <- seq(0,8,.1)
r
Vol <- (4/3)*pi*r^3
Vol
plot(Vol ~ r)
par(mfrow=c(2,2))
r <- seq(0,8,.1)
r
Vol <- (4/3)*pi*r^3
Vol
plot(Vol ~ r)
plot(Vol ~ r,xlab="Radius",ylab="Volume")
title("Volume of Sphere versus its radius")
plot(Vol ~ r,pch=" ",xlab="Radius",ylab="Volume")
lines(Vol ~ r)
circum <- 2*pi*r
circum
plot(circum ~ r,pch=" ",xlab="Radius",ylab="Circumference")
lines(circum ~ r); title("Circumference vs Radius")
1-pnorm(72,70,4)
qnorm(.90,70,4)
dnorm(72,70,4)
rnorm(6,70,4)
x = rnorm(100,70,4); x=sort(x)
x
hist(x,pr=T,main="Histogram of Sample")
hist(x,pr=F,main="Histogram of Sample")
y = dnorm(x,70,4)
lines(y~x)
lines(y~x)
lines(y~x)
lines(y~x)
hist(x,pr=T,main="Histogram of Sample")
x = rnorm(100,70,4); x=sort(x)
hist(x,pr=T,main="Histogram of Sample")
#hist(x,pr=F,main="Histogram of Sample")
y = dnorm(x,70,4)
lines(y~x)
x = rnorm(100,70,4); x=sort(x)
hist(x,pr=T,main="Histogram of Sample")
#hist(x,pr=F,main="Histogram of Sample")
y = dnorm(x,70,4)
lines(y~x)
pbinom(55,100,.6)
dbinom(55,100,.6)
mu=30; sig=sqrt(2*mu); 1-pchisq(mu+2*sig,30)
1-pgamma(mu+2*sig,15,1/2)
vec = 1:20
sample(vec,12,replace=T)
sample(vec,12,replace=T)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
sample(vec,12,replace=F)
source(Practice.R)
source(Practice2.R)
source("Practice2.R")
getwd( )
setwd("C:\Users\ankit19.gupta\Desktop\Self_Projects\IntroToMathematicalStatistics\Practice")
setwd("C:\Users\ankit19.gupta\Desktop\Self_Projects\IntroToMathematicalStatistics\Practice")
setwd("C:/Users/ankit19.gupta/Desktop/Self_Projects/IntroToMathematicalStatistics/Practice")
getwd( )
source("Practice2.R")
cls
clear
shell("cls")
source("Practice2.R")
x = c(3,5,12,4); n=4; xbarn = mean(x);
x; xbarn
xp1 = 30
c(x,xp1); mnupdate(n,xbarn,xp1)
54/5
shell(cls)
shell("cls"\)
shell("cls")
tab <- c()
for(i in 1:n){
tab <- rbind(tab,c(i,i^2,i^3,i^(1/2),i^(1/3)))
}
tab
tab <- c()
tab
rbind(tab,2)
rbind(tab)
rbind(tab,1)
rbind(tab,1,3)
rbind(c(1,2),c(1,3))
rbind(,1,3)
rbind(" ",1,3)
tab <- c()
for(i in 1:n){
tab <- rbind(tab,c(i,i^2,i^3,i^(1/2),i^(1/3)))
}
tab
n
tab <- c()
n=10
for(i in 1:n){
tab <- rbind(tab,c(i,i^2,i^3,i^(1/2),i^(1/3)))
}
tab
svar2 <- function(x){
n <- length(x)
svar2 <- 0
for(i in 1:(n-1)){
for(j in (i+1):n){
svar2 <- svar2 + (x[i]-x[j])^2
}
}
svar2 <- (1/(n*(n-1)))*svar2
return(svar2)
}
svar2(3)
svar2(6)
svar2(c(6,3,4,6))
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2);Mat_B
write(t(Mat_B),ncol=5,file="writing_matrix_to_file.dat")
info <- "This file contains the matrix ....."
save(Mat_B,info,file="try.rda")
load("try.rda")
Mat_B
x <- scan()
4
x
x <- scan()
x
x <- scan()
x
a <- read.table(header = TRUE, text = "
c1 c2
1 4
3 2
")
a
a <- matrix(scan("amat.dat"),ncol=2,byrow=T)
a <- matrix(scan("writing_matrix_to_file.dat"),ncol=2,byrow=T)
a
