source("prog1.R")
bday(10)
simplegame(5)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
simplegame(5)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 1; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 5; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 15; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 1000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
abgame <- function(){
rngA <- c(0,1); pA <- rep(1/2,2); rngB <- 1:6; pB <- rep(1/6,6)
ic <- 0; Awin <- 0; Bwin <- 0
while(ic == 0){
x <- sample(rngA,1,pr=pA)
if(x==1){
ic <- 1; Awin <- 1
} else {
y <- sample(rngB,1,pr=pB)
if(y <= 4){ic <- 1; Bwin <- 1}
}
}
return(c(Awin,Bwin))
}
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
abgame()
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame <- function(amtpaid){
gain <- -amtpaid
x <- 0:2; pace <- (choose(4,x)*choose(48,2-x))/choose(52,2)
x <- sample(1:6,1,prob=rep(1/6,6))
if(x > 2){
y <- sample(0:1,1,prob=rep(1/2,2))
if(y==0){
gain <- gain + 1
} else {
z <- sample(0:2,1,prob=pace)
if(z==0){gain <- gain + 2}
if(z==1){gain <- gain + 10}
if(z==2){gain <- gain + 50}
}
}
return(gain)
}
amtpaid <- 5; numtimes <- 10000; gains <- c()
for(i in 1:numtimes){gains <- c(gains,simplegame(amtpaid))}
mean(gains)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
simplegame(5)
8+6-7*2
simplegame(5)
(150/3)+7^2-1;sqrt(50)-(50)^(0.5)
(4/3)*pi*(5)^3
r<-5
vol<-(4/3)*pi*(r)^3
vol
r <- c(5,6,7,8,9)
r
vol<-(4/3)*pi*(r)^3;vol
r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
vol[2]
r[2]
#matrices
v1=c(1,3);r <- 5:9 ; Vol <- (4/3)*pi*r^3 ; Vol
v1=c(1,3);v2=c(4,2);Mat_A=cbind(v1,v2)
Mat_A
v1=c(1,3,5,7);v2=c(2,4,6,8);Mat_B=rbind(v1,v2)
mat_B
Mat_B
Mat_A%*%Mat_B;solve(Mat_A);t(Mat_B)%*%Mat_A
Mat_A[2,2]
Mat_A[2,1]
Mat_B[2:3,3:4]
Mat_B[1:2,3:4]
x = c(-2,0,3,4,-7,-8,11,0)
x
xn = x[x<0]; xn
xp = x[x>0]; xp
xz = x[x=0]; xz
xz = x[x==0]; xz
par(mfrow=c(2,2))
par(mfrow=c(4,4))
par(mfrow=c(4,4))
par(mfrow=c(2,2))
r <- seq(0,8,.1)
r
Vol <- (4/3)*pi*r^3
Vol
plot(Vol ~ r)
plot(Vol ~ r,xlab="Radius",ylab="Volume")
title("Volume of Sphere versus its radius")
plot(Vol ~ r,pch=" ",xlab="Radius",ylab="Volume")
lines(Vol ~ r)
circum <- 2*pi*r
circum
plot(circum ~ r,pch=" ",xlab="Radius",ylab="Circumference")
lines(circum ~ r); title("Circumference vs Radius")
save.image("C:\\Users\\ankit19.gupta\\Desktop\\Self_Projects\\IntroToMathematicalStatistics\\Practice\\R_GUI_Commands_Practice")
save.image("C:\\Users\\ankit19.gupta\\Desktop\\Self_Projects\\IntroToMathematicalStatistics\\Practice\\R_GUI_Commands_Practice.R")
help
history
history()
history(max.show=Inf)

